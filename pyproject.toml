[project]
name = "extralo"
version = "0.16.0"
description = "ETL for Python"
requires-python = ">=3.9"
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["etl", "data", "data-engineering"]
authors = [{ name = "Vitor Capdeville", email = "vgcapdeville@hotmail.com" }]
maintainers = [
    { name = "Vitor Capdeville", email = "vgcapdeville@hotmail.com" },
]
dependencies = ["pandas", "loguru"]

[project.optional-dependencies]
sql = ["sqlalchemy"]
validation = ["pandera"]
deltalake = ["deltalake"]
all = ["sqlalchemy", "pandera", "deltalake"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "D",  # docformatter
]
ignore = ["D100", "D104", "D105", "D107"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D"]
"*_test.py" = ["D"]
"docs_src/**" = ["D"]

[tool.mypy]
strict = true
exclude = ".venv|tests|docs_src|docs"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "python -m pip install build && python -m build"
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "emoji"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
major_tags = ["💥"]
minor_tags = ["✨"]
patch_tags = ["🚑️", "🔒️", "🐛", "⚡️", "🥅", "👽️", "💬", "📝", "🔧", "🚀", "♻️"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
